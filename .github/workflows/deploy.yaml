name: "Deploy"

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  update_server:
    runs-on: "ubuntu-latest"
    environment: production
    steps:
      - name: checkout on master
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.read_ref }}

      - name: "Create file for private key"
        run: echo "${{ secrets.PRIVATE_KEY }}" > /tmp/private_key && chmod 600 /tmp/private_key

      - name: "Update remote"
        run: >
          ssh -i /tmp/private_key ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }}/ && 
           git fetch && git reset --hard origin/master"

      - name: "Composer package installation"
        run: >
          ssh -i /tmp/private_key ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }}/ && 
           composer install --optimize-autoloader --no-dev"

      - name: "Caching Configuration"
        run: >
          ssh -i /tmp/private_key ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }}/ && 
           php artisan cache:clear &&
           php artisan config:cache"
      
      - name: "Laravel Optimization"
        run: >
          ssh -i /tmp/private_key ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }}/ && 
           php artisan optimize"

      - name: "Optimizing Filament for prod"
        run: >
          ssh -i /tmp/private_key ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }}/ && 
           php artisan filament:optimize"

      - name: "Run migration"
        run: >
          ssh -i /tmp/private_key ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }}/ && 
           php artisan migrate --force"

      - name: "Node modules installation"
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - run: npm ci # Se basera sur le package.lock
      - run: npm run build

      - name: "Send npm build to remote"
        uses: appleboy/scp-action@master
        with:
          source: "./public/build"
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }} 
          host: ${{ secrets.HOST }}
          target: ${{ secrets.REMOTE_PATH }}  
